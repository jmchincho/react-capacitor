workflows:
  android-workflow:
    environment:
      groups:
        - firebase
        - keystore_credentials
    name: Android Workflow
    scripts:
      - name: Install dependencies
        script: |
          npm install
      - name: Build Typescript
        script: |
          npm run build
          npx cap sync android
      - name: Get Git commit hash
        script: |
          export GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
      - name: Decode keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
      - name: Build Android
        script: |
          cd android
          ./gradlew assembleRelease
      - name: Sign APK
        script: |
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $CM_KEYSTORE_PATH -storepass $CM_KEYSTORE_PASSWORD -keypass $CM_KEY_PASSWORD android/app/build/outputs/apk/release/app-release-unsigned.apk $CM_KEY_ALIAS
      - name: Align APK
        script: |
          zipalign -v 4 android/app/build/outputs/apk/release/app-release-unsigned.apk android/app/build/outputs/apk/release/app-release-signed.apk
          rm -rf android/app/build/outputs/apk/release/app-release-unsigned.apk
    artifacts:
      - android/app/build/outputs/**/*.apk
    publishing:
      artifact_paths:
        - android/app/build/outputs/apk/release/app-release-signed.apk
      firebase:
        # use this line to authenticate via service account
        firebase_service_account: $GOOGLE_APPLICATION_CREDENTIALS

        # or this line to authenticate via token:
        # firebase_token: $FIREBASE_TOKEN

        android:
          # Add your Android app id retrieved from Firebase console
          app_id: 1:761973486485:android:98f9b993fb008ebea07c9c
          a
          # Add one or more groups that you wish to distribute your Android application to.
          # You can create groups in the Firebase console
          groups:
            - test