workflows:
  android-workflow:
    environment:
      groups:
        - firebase
        - keystore_credentials
    name: Android Workflow
    scripts:
      - name: Install dependencies
        script: |
          npm install
      - name: Build Typescript
        script: |
          npm run build
          npx cap sync android
      - name: Decode keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
      - name: Build Android
        script: |
          cd android
          ./gradlew assembleRelease
      - name: Align APK
        script: |
          zipalign -v 4 android/app/build/outputs/apk/release/app-release-unsigned.apk android/app/build/outputs/apk/release/app-release-aligned.apk
      - name: Sign APK
        script: |
          apksigner sign --ks $CM_KEYSTORE_PATH --ks-key-alias $CM_KEY_ALIAS --ks-pass pass:$CM_KEYSTORE_PASSWORD --key-pass pass:$CM_KEY_PASSWORD --out android/app/build/outputs/apk/release/app-release-signed.apk android/app/build/outputs/apk/release/app-release-aligned.apk
      - name: Verify Signed APK
        script: |
          apksigner verify --verbose --print-certs android/app/build/outputs/apk/release/app-release-signed.apk
          rm -rf android/app/build/outputs/apk/release/app-release-unsigned.apk
          rm -rf android/app/build/outputs/apk/release/app-release-aligned.apk
    artifacts:
      - android/app/build/outputs/**/*.apk
    publishing:
      firebase:
        firebase_service_account: $GOOGLE_APPLICATION_CREDENTIALS
        android:
          app_id: 1:761973486485:android:98f9b993fb008ebea07c9c
          groups:
            - test

  ios-workflow-development:
    environment:
      groups:
        - firebase
      ios_signing:
        provisioning_profiles:
          - poc_profile_dev
        certificates:
          - poc_certificate
      #        - app_store_credentials
      #        - provisioning_profiles
      #        - certificate_credentials
      vars:
        DEVELOPMENT_TEAM: "PV4A53A4T9"
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        EXPORT_OPTIONS_PLIST: "ios/exportOptions_dev.plist"
    name: iOS Workflow
    scripts:
      - name: Install dependencies
        script: |
          npm install
      - name: Build Typescript
        script: |
          npm run build
          npx cap sync ios
      - name: Set up keychain and provisioning profiles
        script: |
          xcode-project use-profiles
      - name: Build iOS App
        script: |
          pwd
          ls ios
          xcodebuild -workspace $XCODE_WORKSPACE \
                     -scheme $XCODE_SCHEME \
                     -sdk iphoneos \
                     -configuration Release \
                     -archivePath build/App.xcarchive archive \
                      -allowProvisioningUpdates
      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
                     -archivePath build/App.xcarchive \
                     -exportOptionsPlist $EXPORT_OPTIONS_PLIST \
                     -exportPath build/ \
                     -allowProvisioningUpdates
    artifacts:
      - build/**/*.ipa
    publishing:
      firebase:
        firebase_service_account: $GOOGLE_APPLICATION_CREDENTIALS
        ios:
          app_id: 1:761973486485:ios:b57072a1684b2613a07c9c
          groups:
            - test
  ios-workflow:
    integrations:
      app_store_connect: es.test.jmchincho
    environment:
      groups:
        - firebase
      ios_signing:
        provisioning_profiles:
          - poc_profile
        certificates:
          - poc_certificate
      #        - app_store_credentials
      #        - provisioning_profiles
      #        - certificate_credentials
      vars:
        DEVELOPMENT_TEAM: "PV4A53A4T9"
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        EXPORT_OPTIONS_PLIST: "ios/exportOptions.plist"
    name: iOS Workflow
    scripts:
      - name: Install dependencies
        script: |
          npm install
      - name: Build Typescript
        script: |
          npm run build
          npx cap sync ios
      - name: Set up keychain and provisioning profiles
        script: |
          xcode-project use-profiles
      - name: Build iOS App
        script: |
          pwd
          ls ios
          xcodebuild -workspace $XCODE_WORKSPACE \
                     -scheme $XCODE_SCHEME \
                     -sdk iphoneos \
                     -configuration Release \
                     -archivePath build/App.xcarchive archive \
                      -allowProvisioningUpdates
      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
                     -archivePath build/App.xcarchive \
                     -exportOptionsPlist $EXPORT_OPTIONS_PLIST \
                     -exportPath build/ \
                     -allowProvisioningUpdates
    artifacts:
      - build/**/*.ipa
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        expire_build_submitted_for_review: true
        beta_groups:
          - grupo_beta1
          - grupo_beta2
